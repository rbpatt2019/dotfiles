set rtp+=~/.fzf

let mapleader = ' '
let maplocalleader = ','
filetype on
filetype plugin on
set splitright
set splitbelow
set encoding=utf8
set number
set scrolloff=2
set incsearch
set nohlsearch
set ignorecase
set smartcase
set noshowmatch
set noruler
set smarttab
set expandtab
set fileformat=unix
set twk=<C-w>
set tws="15*0"
set timeoutlen=333
set updatetime=100
set signcolumn=yes
set laststatus=2
set termguicolors
set pyxversion=2
set completeopt=noinsert,menuone,noselect
set shortmess+=c
syntax on

" Colors - NLKNguyen/papercolor-theme'
let g:PaperColor_Theme_Options = {
	\	'language': {
	\		'python': {
	\			'highlight_builtins': 1
	\		}
	\	},
  	\   	'theme': {
  	\     		'default': {
  	\       		'allow_bold': 0,
	\			'allow_italic': 0,
	\			'transparent_background': 0
  	\     		}
  	\   	}
	\ }
set t_Co=256
set background=dark
colorscheme PaperColor
map <Leader>b :let &background = ( &background == "dark"? "light" : "dark" )<CR>

" Easy motion
map <Leader><Leader> <Plug>(easymotion-prefix)

" Which key
nnoremap <silent> <leader> :WhichKey '<Space>'<CR>
nnoremap <silent> <localleader> :WhichKey ','<CR>

" fzf - because fuzzy finding is awesome
" relevant mapping is <leader>f*
nnoremap <leader>fb :w<CR>:Buffers<CR>
nnoremap <leader>ff :w<CR>:Files<CR>
nnoremap <leader>fg :w<CR>:GFiles<CR>
nnoremap <leader>ft :w<CR>:BTags<CR>
nnoremap <leader>fT :w<CR>:Tags<CR>
nnoremap <leader>fc :w<CR>:BCommits<CR>
nnoremap <leader>fC :w<CR>:Commits<CR>
nnoremap <leader>fh :w<CR>:Helptags<CR>
nnoremap <leader>fl :w<CR>:BLines<CR>
nnoremap <leader>fL :w<CR>:Lines<CR>

" vim-fugitive
" relative mappings are <leader>g*
nnoremap <leader>gs :Gstatus<CR>
nnoremap <leader>gc :Gcommit %<CR>
nnoremap <leader>gf :Gpull<CR>
nnoremap <leader>gp :Gpush<CR>
nnoremap <leader>gl :Glog<CR>
nnoremap <leader>gw :Gwrite<CR>
nnoremap <leader>gd :Gvdiffsplit!<CR>
nnoremap <leader>gm :Gmove
nnoremap <leader>gx :Gdelete<CR>
nnoremap <leader>gb :Gblame<CR>
nnoremap <leader>gv :Gread<CR>

" git-gutter - sign indication for git changes
let g:gitgutter_map_keys = 0
let g:gitgutter_sign_added = '@'
hi GitGutterAdd ctermfg=9 ctermbg=0
let g:gitgutter_sign_modified = '@'
hi GitGutterChange ctermfg=3 ctermbg=0
let g:gitgutter_sign_removed = '@'
hi GitGutterDelete ctermfg=13 ctermbg=0
let g:gitgutter_sign_removed_first_line = '^'
let g:gitgutter_sign_modified_removed = '@'
hi GitGutterChangeDelete ctermfg=6 ctermbg=0

" ALE Global settings
" let g:ale_fixers = {
" \       '*': ['remove_trailing_lines', 'trim_whitespace'],
" \       'r': ['styler']
" \}
" let g:ale_linters = {
" \       'r': ['lintr']
" \}
" let g:ale_fix_on_save = 0
" let g:ale_completion_enabled = 0
" let g:ale_sign_column_always = 1
" let g:ale_set_highlights = 1
" let g:ale_echo_msg_error_str = 'E'
" let g:ale_echo_msg_warning_str = 'W'
" let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
" nnoremap <localeader>F :ALEFix<CR>

" Airline
let g:airline#extensions#ale#enabled = 1
let g:airline#extensions#tabline#enabled = 0
let g:airline_theme = 'bubblegum'
let g:airline_section_y = ''
let g:airline_section_z = "[%l:%c]"

" " NCM-R settings
" " autocmd BufEnter * call ncm2#enable_for_buffer()
" inoremap <expr> <CR> (pumvisible() ? "\<c-y>\<cr>" : "\<CR>")
" inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
" inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"

" Navigate splits
nnoremap <C-j> <C-w><C-j>
nnoremap <C-k> <C-w><C-k>
nnoremap <C-h> <C-w><C-h>
nnoremap <C-l> <C-w><C-l>
nnoremap <C-J> <C-w><C-J>
nnoremap <C-K> <C-w><C-K>
nnoremap <C-H> <C-w><C-H>
nnoremap <C-L> <C-w><C-L>

" Terminal interactions
tnoremap <C-n> <C-\><C-n>
tnoremap <C-k> <C-w><C-k>
tnoremap <C-j> <C-w><C-j>
tnoremap <C-h> <C-w><C-h>
tnoremap <C-l> <C-w><C-l>
tnoremap <C-q> <C-w>:q!<CR>
augroup term_splits
  autocmd!
  autocmd BufEnter * if &buftype == 'terminal' | wincmd L | endif
augroup END
" File interactions
nnoremap <leader>w :w<CR>
nnoremap <leader>q :q!<CR>
nnoremap <leader>Q :qa!<CR>
nnoremap <leader>n :n 
nnoremap <leader>e :e 

" Edit settings
nnoremap <leader>sv :vs /Users/pattersonrb/.vim/vimrc<CR>
nnoremap <leader>sr :vs /Users/pattersonrb/.vim/ftplugin/R.vim<CR>
nnoremap <leader>ss :so $MYVIMRC<CR>

" Buffer interactions
nnoremap <leader>x :w<CR>:bd<CR>

" Browse
nnoremap <leader>F :CocCommand explorer<CR>
nnoremap <leader>tl :CocList todolist<CR>
nnoremap <leader>td :CocCommand todolist.create<CR>
nnoremap <silent> <leader>y  :<C-u>CocList -A --normal yank<cr>
nmap <buffer> <leader>c :CocCommand<CR>
vmap <buffer> <leader>c :CocCommand<CR>

silent! helptag ALL
