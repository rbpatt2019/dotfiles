alias graphic="sudo service lightdm start"
alias text="sudo service lightdm stop"
alias fix="source $HOME/Projects/dotfiles/zsh/tty.sh"
alias q="qalc"
alias s="source ~/.zshrc"
alias v="vim"
alias m='make'
alias fd='fdfind'
alias rmrf="rm -rf"
alias w3m="w3m -no-mouse -graph"

alias la="exa -ahlF"
alias lt="exa -ahlFr --sort time"
alias lg="exa -ahlF --git --git-ignore"
alias dot="cd /home/rbpatt2019/Projects/dotfiles"
alias work="tmuxinator work"
alias camb="tmuxinator camb"

alias i="ipython"
alias pv="pyenv"
alias pt="poetry"
alias r="radian"
alias rv="renv"
alias t="tmux"

alias ga="git add"
alias gc="git commit"
alias gd="git diff"
alias gf="git pull"
alias gg="git merge --no-ff -e"
alias gl="git log --reverse -10"
alias gm="git mv"
alias gb="git branch"
alias gp="git push"
alias gr="git reset"
alias gs="git status -sb"
alias gt="git tag"
alias gv="git checkout"
alias gx="git rm"
alias gh="git stash"
alias gu="git submodule update --remote --merge && git commit -m 'Update submodules'"

alias pipes="pipes.sh -R -t 1 -p 3 -s 12 -r 3000 -c 9 -c 13 -c 1 -c 2 -c 3 -c 4 -c 5 -c 6 && fix"
alias advice="fortune -s | cowsay -f tux"

alias -g G="| rg"
alias -g L="&& ls"
alias -g X="| xargs"


git_current_release()
{
        # Gets the most current release of a remote repository
        curl --silent "https://api.github.com/repos/$1/releases/latest" | \
        jq '.tag_name' | \
        tr -d '"'
}

gw()
{
        local files=${1:-\.}
        local msg=${2:-"Files altered"}
        git add "$files" &&
        git commit "$files" -m "$msg"
}

l.()
{
	ls -Ga $1 | grep '^\.';
}

pa()
{
        local files=${1}
        local pmid=${2}
        local title=${3:-"Title"}
        papis add \
        "$files" \
        --git \
        --folder-name "$title" \
        --from pmid "$pmid"
}
mkcd()
{
	mkdir -p -- "$1" &&
	cd -P -- "$1"
}

bwcp()
{
        local dir=${2:-\.}
        scp helix.nih.gov:/data/pattersonrb/"$1" "$dir"
}

colours()
{
        for i in {0..255} ; do
            printf "\x1b[48;5;%sm%3d\e[0m " "$i" "$i"
            if (( i == 15 )) || (( i > 15 )) && (( (i-15) % 6 == 0 )); then
                printf "\n";
            fi
        done
}
