alias s=". $DOT/zsh/.zshrc"
alias m='make'
alias j='just'
alias rmrf="rm -rf"
alias w3m="w3m -no-mouse -graph"

alias la="exa -ahlF"
alias lt="exa -ahlF --sort time"
alias lg="exa -ahlF --git --git-ignore"
alias ll="exa -hlF"
alias l.="exa -ld .*"
alias le="exa -G"

alias dot="cd $HOME/Projects/dotfiles"
alias d="dirs -v"
for i in {1..9}; do
    alias "$i=cd ~$i"
done

alias i="ipython"
alias pv="pyenv"
alias pt="poetry"
alias r="radian"
alias t="tmux"
alias ta="tmux attach -t"

# This seems to be required...
eval $(thefuck --alias wtf)

alias ga="git add"
alias gc="git commit"
alias gd="git diff"
alias gf="git pull"
alias gg="git merge --no-ff -e"
alias gl="git log --reverse -10"
alias gm="git mv"
alias gb="git branch"
alias gp="git push"
alias gr="git restore"
alias gs="git status -sb"
alias gt="git tag"
alias gv="git checkout"
alias gx="git rm"
alias gst="git stash"
alias gu="git submodule update --remote --merge && git commit -m 'Update submodules'"

alias -g G="| rg"
alias -g L="&& le"
alias -g T="| ts '%Y%m%d-%.T'"
alias -g S="| sponge"
alias -g P="| pee"
alias -g NI="| ifne"
alias -g B="| bat -"

pyenv() {
        echo "Lazy loading pyenv...\n"
        unset -f pyenv
        eval "$(command pyenv init -)"
        eval "$(command pyenv virtualenv-init -)"
        pyenv $@
}

gw()
{
        local files=${1:-\.}
        git add "$files" &&
        git commit "$files"
}

mkcd()
{
	mkdir -p -- "$1" &&
	cd -P -- "$1"
}

touch2()
{
        local file=${1:-"tmpfile.txt"}
        mkdir -p -- "$(dirname "$file")" &&
        touch "$file"
}

colours()
{
        printf "Colors 0 to 15 for the standard 16 foreground colors\n"
        for ((c = 0; c < 16; c++)); do
            printf "|%s%3d%s" "$(tput setaf "$c")" "$c" "$(tput sgr0)"
        done
        printf "|\n\n"

        printf "Colors 0 to 15 for the standard 16 background colors\n"
        for ((c = 0; c < 16; c++)); do
            printf "|%s%3d%s" "$(tput setab "$c")" "$c" "$(tput sgr0)"
        done
        printf "|\n\n"
}

# Assume passed files trump existing session
v()
{
        if [ "$#" -ne 0 ]; then
                vim "$@"
        elif [ -f "$(pwd)/Session.vim" ]; then
                vim -S Session.vim
        else
                local  FZF_DEFAULT_COMMAND="fd --type f --hidden --follow --exclude '.git'"
                files=$(fzf \
                        -m \
                        --layout=reverse \
                        --inline-info \
                        -select-1 \
                        --exit-0 \
                        --bind '?:toggle-preview' \
                        --preview-window down:15:hidden:wrap \
                        --preview="bat --plain -r 1:15 -P --color always {}"
                )
                vim $files
        fi
}
